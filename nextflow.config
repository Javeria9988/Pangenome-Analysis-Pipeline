docker {
    enabled = true
}

params {
    sequences = 'sequences/*.fa'  // Path to the sequence files

    annotate {
        prefix = ''  
        evalue = 1e-6 
        coverage = 0.8  
        mincontiglen = 200  
        rfam = true  
        addgenes = true                           
    }

    panaroo {
    	clean_mode = 'strict'
    	analysis_mode = 'pan'
    	aligner = 'mafft'
    	threads = 4
    	min_trailing_support = 3
    	core_threshold = 0.99
    	min_edge_support_sv = 3
    	remove_invalid_genes = true
    }

    dwgsim {
        error_rate = 0
        indel_fraction = 0
        mutation_rate = 0           
        indel_rate = 0              
        num_reads = 100000
        read_len_1 = 150
        read_len_2 = 150
        no_duplicates = true        
    }

    snippy {
        mincov = 10
        minfrac = 0.7
        maxsoft = 10
        minqual = 10
        cpus = 4
    }

    detectStopCodons {
        input_format = 'fasta'
        stop_codon_symbol = '*'
    }
}

process {
    withName: annotate {
        container = 'staphb/prokka:latest'
        memory = '6 GB'
        cpus = 4
        time = '2h'
        publishDir = [
            path: "ANNOTATION",
            mode: 'copy',
            overwrite: true
        ]
    }

    withName: panaroo {
        container = 'staphb/panaroo:latest'
        memory = '6 GB'
        cpus = 4
        time = '6h'
        publishDir = [
            path: "panaroo_output",
            mode: 'copy',
            overwrite: true
        ]
    }
    
    withName: dwgsim {
        container = 'dwgsim-with-ps:latest'
        memory = '4 GB'
        cpus = 2
        time = '1h'
        publishDir = [
            path: "dwgsim_output",
            mode: 'copy',
            overwrite: true
        ]
        
    }

    withName: snippy {
        container = 'staphb/snippy:4.6.0'
        memory = '6 GB'
        cpus = 4
        time = '5h'
        publishDir = [
            path: "snippy_output",
            mode: 'copy',
            overwrite: true
        ]
    }

    withName: detectStopCodons {
        container = 'python-biopython-pandas-ps:latest'
        memory = '6 GB'
        cpus = 2
        time = '1h30m'
        publishDir = [
            path: "detectStopCodons_results",
            mode: 'copy',
            overwrite: true
        ]
    }
    
    withName: genedescription {
        container = 'python-biopython-pandas-ps:latest'
        memory = '4 GB'
        cpus = 2
        time = '1h'
        publishDir = [
            path: "genedescription_output",
            mode: 'copy',
            overwrite: true
        ]
    }
    
}



